{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,uDAAU;AAClB;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,iEAAe,SAAS;;;;;;;;;;;;;;AC/BxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,KAAK,GAAG,UAAU,GAAG,OAAO,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,iEAAe,UAAU;;;;;;UC5CzB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN4C;AAC5C;AACA,8DAAS,G","sources":["webpack://kredo-bet-2.0/./src/js/modules/getLeague.js","webpack://kredo-bet-2.0/./src/js/modules/getMatches.js","webpack://kredo-bet-2.0/webpack/bootstrap","webpack://kredo-bet-2.0/webpack/runtime/define property getters","webpack://kredo-bet-2.0/webpack/runtime/hasOwnProperty shorthand","webpack://kredo-bet-2.0/webpack/runtime/make namespace object","webpack://kredo-bet-2.0/./src/js/script.js"],"sourcesContent":["import getMatches from './getMatches';\r\n\r\nlet getLeague = () => {\r\n    // Получаем все лиги\r\n    const options = {\r\n        method: 'GET',\r\n        url: 'https://api-football-v1.p.rapidapi.com/v3/leagues',\r\n        headers: {\r\n            'x-rapidapi-host': 'api-football-v1.p.rapidapi.com',\r\n            'x-rapidapi-key': 'f570367049msh92d23c8fda1a817p1b03cfjsne8957d93c6e0'\r\n        }\r\n    };\r\n\r\n    axios.request(options).then(function (response) {\r\n        console.log(response.data);\r\n\r\n        let { response: arrLeagueAll } = response.data;\r\n        // Фильтруем лиги и получаем массив с нужными лигами \r\n        let arrLeague = arrLeagueAll.filter((el) => {\r\n            return(el.country.name != 'World' && el.league.type != 'Cup' &&\r\n            el.seasons[el.seasons.length - 1].coverage.odds == true &&\r\n            el.seasons[el.seasons.length - 1].coverage.predictions == true &&\r\n            el.seasons[el.seasons.length - 1].coverage.standings == true);\r\n        });\r\n        getMatches(arrLeague);\r\n\r\n    }).catch(function (error) {\r\n        console.error(error);\r\n    });\r\n}\r\n\r\nexport default getLeague;","let getMatches = (arrLeague) => {\r\n// получаем все матчи на сегодняшний день\r\nconst date = new Date(),\r\n      year = date.getFullYear(),\r\n      mounth = date.getMonth(),\r\n      day = date.getDate();\r\n\r\nlet mounthNew = '0',\r\n    dayNew = '0';\r\n\r\nif(day < 10) {\r\n    dayNew = dayNew + String(day)\r\n} else {\r\n    dayNew = day;\r\n}    \r\n\r\nif(mounth < 10) {\r\n    mounthNew = mounthNew + String(mounth)\r\n} else {\r\n    mounthNew = mounth;\r\n}\r\n\r\nconst options = {\r\n    method: 'GET',\r\n    url: 'https://api-football-v1.p.rapidapi.com/v3/fixtures',\r\n    params: {date: `${year}-${mounthNew}-${dayNew}`},\r\n    headers: {\r\n      'x-rapidapi-host': 'api-football-v1.p.rapidapi.com',\r\n      'x-rapidapi-key': 'f570367049msh92d23c8fda1a817p1b03cfjsne8957d93c6e0'\r\n    }\r\n  };\r\n  \r\n  axios.request(options).then(function (response) {\r\n      console.log(response.data);\r\n\r\n      let {response: allMatches} = response.data;\r\n\r\n      \r\n\r\n  }).catch(function (error) {\r\n      console.error(error);\r\n  });\r\n}\r\n\r\nexport default getMatches;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import getLeague from './modules/getLeague';\r\n\r\ngetLeague();"],"names":[],"sourceRoot":""}